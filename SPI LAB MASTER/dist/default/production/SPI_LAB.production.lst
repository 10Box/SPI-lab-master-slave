

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Nov 04 20:33:17 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0008                     _PORTD	set	8
   167     0013                     _SSPBUF	set	19
   168     0032                     _RB2	set	50
   169     0031                     _RB1	set	49
   170     0030                     _RB0	set	48
   171     00A3                     _SSPM3	set	163
   172     00A2                     _SSPM2	set	162
   173     00A1                     _SSPM1	set	161
   174     00A0                     _SSPM0	set	160
   175     00A4                     _CKP	set	164
   176     00A5                     _SSPEN	set	165
   177     0088                     _TRISD	set	136
   178     0086                     _TRISB	set	134
   179     04A0                     _BF	set	1184
   180     04A7                     _SMP	set	1191
   181     04A6                     _CKE	set	1190
   182     043C                     _TRISC4	set	1084
   183     043B                     _TRISC3	set	1083
   184     043D                     _TRISC5	set	1085
   185                           
   186                           	psect	cinit
   187     07FC                     start_initialization:	
   188                           ; #config settings
   189                           
   190     07FC                     __initialization:
   191     07FC                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194     07FC                     __end_of__initialization:
   195     07FC  0183               	clrf	3
   196     07FD  120A  118A  2FA3   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	cstackCOMMON
   199     0070                     __pcstackCOMMON:
   200     0070                     ?_SPI_master_init:
   201     0070                     ??_SPI_master_init:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ?_SPI_master_write:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ??_SPI_master_write:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     ?_main:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     SPI_master_write@data:	
   214                           ; 1 bytes @ 0x0
   215                           
   216                           
   217                           ; 1 bytes @ 0x0
   218     0070                     	ds	1
   219     0071                     ??_main:
   220                           
   221                           ; 1 bytes @ 0x1
   222     0071                     	ds	3
   223     0074                     main@data:
   224                           
   225                           ; 1 bytes @ 0x4
   226     0074                     	ds	1
   227                           
   228                           	psect	maintext
   229     07A3                     __pmaintext:	
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 45 in file "MASTER.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;  data            1    4[COMMON] unsigned char 
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : B00/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   249 ;;      Params:         0       0       0       0       0
   250 ;;      Locals:         1       0       0       0       0
   251 ;;      Temps:          3       0       0       0       0
   252 ;;      Totals:         4       0       0       0       0
   253 ;;Total ram usage:        4 bytes
   254 ;; Hardware stack levels required when called: 1
   255 ;; This function calls:
   256 ;;		_SPI_master_init
   257 ;;		_SPI_master_write
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263     07A3                     _main:	
   264                           ;psect for function _main
   265                           
   266     07A3                     l608:	
   267                           ;incstack = 0
   268                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   269                           
   270                           
   271                           ;MASTER.c: 46:     TRISB = 0x07;
   272     07A3  3007               	movlw	7
   273     07A4  1683               	bsf	3,5	;RP0=1, select bank1
   274     07A5  1303               	bcf	3,6	;RP1=0, select bank1
   275     07A6  0086               	movwf	6	;volatile
   276     07A7                     l610:
   277                           
   278                           ;MASTER.c: 47:     TRISD = 0x00;
   279     07A7  0188               	clrf	8	;volatile
   280     07A8                     l612:
   281                           
   282                           ;MASTER.c: 48:     PORTD = 0x00;
   283     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   284     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   285     07AA  0188               	clrf	8	;volatile
   286     07AB                     l614:
   287                           
   288                           ;MASTER.c: 49:     uint8_t data = 0;
   289     07AB  01F4               	clrf	main@data
   290     07AC                     l616:
   291                           
   292                           ;MASTER.c: 50:     SPI_master_init();
   293     07AC  120A  118A  278B  120A  118A  	fcall	_SPI_master_init
   294     07B1                     l618:
   295                           
   296                           ;MASTER.c: 52:         if(RB0){
   297     07B1  1283               	bcf	3,5	;RP0=0, select bank0
   298     07B2  1303               	bcf	3,6	;RP1=0, select bank0
   299     07B3  1C06               	btfss	6,0	;volatile
   300     07B4  2FB6               	goto	u21
   301     07B5  2FB7               	goto	u20
   302     07B6                     u21:
   303     07B6  2FC8               	goto	l624
   304     07B7                     u20:
   305     07B7                     l620:
   306                           
   307                           ;MASTER.c: 53:             data++;
   308     07B7  3001               	movlw	1
   309     07B8  00FF               	movwf	btemp+1
   310     07B9  087F               	movf	btemp+1,w
   311     07BA  07F4               	addwf	main@data,f
   312     07BB                     l622:
   313                           
   314                           ;MASTER.c: 54:             _delay((unsigned long)((250)*(4000000/4000.0)));
   315     07BB  3002               	movlw	2
   316     07BC  00F3               	movwf	??_main+2
   317     07BD  3045               	movlw	69
   318     07BE  00F2               	movwf	??_main+1
   319     07BF  30A9               	movlw	169
   320     07C0  00F1               	movwf	??_main
   321     07C1                     u57:
   322     07C1  0BF1               	decfsz	??_main,f
   323     07C2  2FC1               	goto	u57
   324     07C3  0BF2               	decfsz	??_main+1,f
   325     07C4  2FC1               	goto	u57
   326     07C5  0BF3               	decfsz	??_main+2,f
   327     07C6  2FC1               	goto	u57
   328     07C7  2FC8               	nop2
   329     07C8                     l624:
   330                           
   331                           ;MASTER.c: 56:         if(RB1) {
   332     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   333     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   334     07CA  1C86               	btfss	6,1	;volatile
   335     07CB  2FCD               	goto	u31
   336     07CC  2FCE               	goto	u30
   337     07CD                     u31:
   338     07CD  2FDD               	goto	l630
   339     07CE                     u30:
   340     07CE                     l626:
   341                           
   342                           ;MASTER.c: 57:             data--;
   343     07CE  3001               	movlw	1
   344     07CF  02F4               	subwf	main@data,f
   345     07D0                     l628:
   346                           
   347                           ;MASTER.c: 58:             _delay((unsigned long)((250)*(4000000/4000.0)));
   348     07D0  3002               	movlw	2
   349     07D1  00F3               	movwf	??_main+2
   350     07D2  3045               	movlw	69
   351     07D3  00F2               	movwf	??_main+1
   352     07D4  30A9               	movlw	169
   353     07D5  00F1               	movwf	??_main
   354     07D6                     u67:
   355     07D6  0BF1               	decfsz	??_main,f
   356     07D7  2FD6               	goto	u67
   357     07D8  0BF2               	decfsz	??_main+1,f
   358     07D9  2FD6               	goto	u67
   359     07DA  0BF3               	decfsz	??_main+2,f
   360     07DB  2FD6               	goto	u67
   361     07DC  2FDD               	nop2
   362     07DD                     l630:
   363                           
   364                           ;MASTER.c: 60:         PORTD = data;
   365     07DD  0874               	movf	main@data,w
   366     07DE  1283               	bcf	3,5	;RP0=0, select bank0
   367     07DF  1303               	bcf	3,6	;RP1=0, select bank0
   368     07E0  0088               	movwf	8	;volatile
   369     07E1                     l632:
   370                           
   371                           ;MASTER.c: 61:         if(RB2) {
   372     07E1  1D06               	btfss	6,2	;volatile
   373     07E2  2FE4               	goto	u41
   374     07E3  2FE5               	goto	u40
   375     07E4                     u41:
   376     07E4  2FB1               	goto	l618
   377     07E5                     u40:
   378     07E5                     l634:
   379                           
   380                           ;MASTER.c: 62:             SPI_master_write(data);
   381     07E5  0874               	movf	main@data,w
   382     07E6  120A  118A  277F  120A  118A  	fcall	_SPI_master_write
   383     07EB                     l636:
   384                           
   385                           ;MASTER.c: 63:             _delay((unsigned long)((250)*(4000000/4000.0)));
   386     07EB  3002               	movlw	2
   387     07EC  00F3               	movwf	??_main+2
   388     07ED  3045               	movlw	69
   389     07EE  00F2               	movwf	??_main+1
   390     07EF  30A9               	movlw	169
   391     07F0  00F1               	movwf	??_main
   392     07F1                     u77:
   393     07F1  0BF1               	decfsz	??_main,f
   394     07F2  2FF1               	goto	u77
   395     07F3  0BF2               	decfsz	??_main+1,f
   396     07F4  2FF1               	goto	u77
   397     07F5  0BF3               	decfsz	??_main+2,f
   398     07F6  2FF1               	goto	u77
   399     07F7  2FF8               	nop2
   400     07F8  2FB1               	goto	l618
   401     07F9  120A  118A  2800   	ljmp	start
   402     07FC                     __end_of_main:
   403                           
   404                           	psect	text1
   405     077F                     __ptext1:	
   406 ;; *************** function _SPI_master_write *****************
   407 ;; Defined at:
   408 ;;		line 35 in file "MASTER.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;  data            1    wreg     unsigned char 
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  data            1    0[COMMON] unsigned char 
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         0       0       0       0       0
   423 ;;      Locals:         1       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0
   425 ;;      Totals:         1       0       0       0       0
   426 ;;Total ram usage:        1 bytes
   427 ;; Hardware stack levels used: 1
   428 ;; This function calls:
   429 ;;		Nothing
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435     077F                     _SPI_master_write:	
   436                           ;psect for function _SPI_master_write
   437                           
   438                           
   439                           ;incstack = 0
   440                           ; Regs used in _SPI_master_write: [wreg]
   441                           ;SPI_master_write@data stored from wreg
   442     077F  00F0               	movwf	SPI_master_write@data
   443     0780                     l606:
   444                           
   445                           ;MASTER.c: 38:     SSPBUF = data;
   446     0780  0870               	movf	SPI_master_write@data,w
   447     0781  1283               	bcf	3,5	;RP0=0, select bank0
   448     0782  1303               	bcf	3,6	;RP1=0, select bank0
   449     0783  0093               	movwf	19	;volatile
   450     0784                     l46:	
   451                           ;MASTER.c: 43:     while(!BF);
   452                           
   453     0784  1683               	bsf	3,5	;RP0=1, select bank1
   454     0785  1303               	bcf	3,6	;RP1=0, select bank1
   455     0786  1C14               	btfss	20,0	;volatile
   456     0787  2F89               	goto	u11
   457     0788  2F8A               	goto	u10
   458     0789                     u11:
   459     0789  2F84               	goto	l46
   460     078A                     u10:
   461     078A                     l49:
   462     078A  0008               	return
   463     078B                     __end_of_SPI_master_write:
   464                           
   465                           	psect	text2
   466     078B                     __ptext2:	
   467 ;; *************** function _SPI_master_init *****************
   468 ;; Defined at:
   469 ;;		line 10 in file "MASTER.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		None
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0
   486 ;;      Totals:         0       0       0       0       0
   487 ;;Total ram usage:        0 bytes
   488 ;; Hardware stack levels used: 1
   489 ;; This function calls:
   490 ;;		Nothing
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496     078B                     _SPI_master_init:	
   497                           ;psect for function _SPI_master_init
   498                           
   499     078B                     l604:	
   500                           ;incstack = 0
   501                           ; Regs used in _SPI_master_init: []
   502                           
   503                           
   504                           ;MASTER.c: 14:     SSPEN = 1;
   505     078B  1283               	bcf	3,5	;RP0=0, select bank0
   506     078C  1303               	bcf	3,6	;RP1=0, select bank0
   507     078D  1694               	bsf	20,5	;volatile
   508                           
   509                           ;MASTER.c: 15:     TRISC5 = 0;
   510     078E  1683               	bsf	3,5	;RP0=1, select bank1
   511     078F  1303               	bcf	3,6	;RP1=0, select bank1
   512     0790  1287               	bcf	7,5	;volatile
   513                           
   514                           ;MASTER.c: 16:     TRISC3 = 0;
   515     0791  1187               	bcf	7,3	;volatile
   516                           
   517                           ;MASTER.c: 17:     TRISC4 = 1;
   518     0792  1607               	bsf	7,4	;volatile
   519                           
   520                           ;MASTER.c: 18:     CKP = 0;
   521     0793  1283               	bcf	3,5	;RP0=0, select bank0
   522     0794  1303               	bcf	3,6	;RP1=0, select bank0
   523     0795  1214               	bcf	20,4	;volatile
   524                           
   525                           ;MASTER.c: 19:     CKE = 0;
   526     0796  1683               	bsf	3,5	;RP0=1, select bank1
   527     0797  1303               	bcf	3,6	;RP1=0, select bank1
   528     0798  1314               	bcf	20,6	;volatile
   529                           
   530                           ;MASTER.c: 22:     SSPM0 = 0;
   531     0799  1283               	bcf	3,5	;RP0=0, select bank0
   532     079A  1303               	bcf	3,6	;RP1=0, select bank0
   533     079B  1014               	bcf	20,0	;volatile
   534                           
   535                           ;MASTER.c: 23:     SSPM1 = 0;
   536     079C  1094               	bcf	20,1	;volatile
   537                           
   538                           ;MASTER.c: 24:     SSPM2 = 0;
   539     079D  1114               	bcf	20,2	;volatile
   540                           
   541                           ;MASTER.c: 25:     SSPM3 = 0;
   542     079E  1194               	bcf	20,3	;volatile
   543                           
   544                           ;MASTER.c: 30:     SMP = 0;
   545     079F  1683               	bsf	3,5	;RP0=1, select bank1
   546     07A0  1303               	bcf	3,6	;RP1=0, select bank1
   547     07A1  1394               	bcf	20,7	;volatile
   548     07A2                     l43:
   549     07A2  0008               	return
   550     07A3                     __end_of_SPI_master_init:
   551     007E                     btemp	set	126	;btemp
   552     007E                     wtemp0	set	126
   553                           
   554                           	psect	config
   555                           
   556                           ;Config register CONFIG @ 0x2007
   557                           ;	Oscillator Selection bits
   558                           ;	FOSC = XT, XT oscillator
   559                           ;	Watchdog Timer Enable bit
   560                           ;	WDTE = OFF, WDT disabled
   561                           ;	Power-up Timer Enable bit
   562                           ;	PWRTE = ON, PWRT enabled
   563                           ;	Brown-out Reset Enable bit
   564                           ;	BOREN = ON, BOR enabled
   565                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   566                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   567                           ;	Data EEPROM Memory Code Protection bit
   568                           ;	CPD = OFF, Data EEPROM code protection off
   569                           ;	Flash Program Memory Write Enable bits
   570                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   571                           ;	In-Circuit Debugger Mode bit
   572                           ;	DEBUG = 0x1, unprogrammed default
   573                           ;	Flash Program Memory Code Protection bit
   574                           ;	CP = OFF, Code protection off
   575     2007                     	org	8199
   576     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_master_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              1 COMMON     4     4      0
                    _SPI_master_init
                   _SPI_master_write
 ---------------------------------------------------------------------------------
 (1) _SPI_master_write                                     1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_master_init
   _SPI_master_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Nov 04 20:33:17 2023

                      _BF 04A0                        l43 07A2                        l46 0784  
                      l49 078A                        u10 078A                        u11 0789  
                      u20 07B7                        u21 07B6                        u30 07CE  
                      u31 07CD                        u40 07E5                        u41 07E4  
                      u57 07C1                        u67 07D6                        u77 07F1  
                     l610 07A7                       l604 078B                       l620 07B7  
                     l612 07A8                       l606 0780                       l630 07DD  
                     l622 07BB                       l614 07AB                       l632 07E1  
                     l624 07C8                       l616 07AC                       l608 07A3  
                     l634 07E5                       l626 07CE                       l618 07B1  
                     l636 07EB                       l628 07D0                       _CKE 04A6  
                     _CKP 00A4                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _SMP 04A7                      _main 07A3  
                    btemp 007E                      start 0000                     ?_main 0070  
                   _PORTD 0008                     _SSPM0 00A0                     _SSPM1 00A1  
                   _SSPM2 00A2                     _SSPM3 00A3                     _TRISB 0086  
                   _TRISD 0088                     _SSPEN 00A5          _SPI_master_write 077F  
                   status 0003                     wtemp0 007E           __initialization 07FC  
            __end_of_main 07FC                    ??_main 0071                    _TRISC3 043B  
                  _TRISC4 043C                    _TRISC5 043D                    _SSPBUF 0013  
 __end_of__initialization 07FC            __pcstackCOMMON 0070         ??_SPI_master_init 0070  
              __pmaintext 07A3  __end_of_SPI_master_write 078B                   __ptext1 077F  
                 __ptext2 078B      end_of_initialization 07FC           _SPI_master_init 078B  
     start_initialization 07FC         ?_SPI_master_write 0070        ??_SPI_master_write 0070  
               ___latbits 0002   __end_of_SPI_master_init 07A3          ?_SPI_master_init 0070  
                main@data 0074      SPI_master_write@data 0070  
